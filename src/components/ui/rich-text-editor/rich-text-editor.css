/* Tiptap Editor Styles */
.ProseMirror {
  padding: 12px;
  min-height: 100px;
  outline: none;
  word-break: break-word;
  overflow-wrap: break-word;
}

/* Display-only styles (for RichTextDisplay component) */
.ProseMirror[contenteditable="false"] {
  padding: 0;
  min-height: auto;
  word-break: break-word;
  overflow-wrap: break-word;
}

.ProseMirror[contenteditable="false"] p {
  margin: 0.1em 0;
  word-break: break-word;
  overflow-wrap: break-word;
}

.ProseMirror[contenteditable="false"] ul,
.ProseMirror[contenteditable="false"] ol {
  margin: 0.1em 0;
  padding-left: 1.2rem;
}

.ProseMirror[contenteditable="false"] li {
  margin: 0;
  word-break: break-word;
  overflow-wrap: break-word;
}

/* Hide only the trailing break itself in read-only mode, not the content */
.ProseMirror[contenteditable="false"] > p:last-child > br.ProseMirror-trailingBreak:only-child {
  display: none;
}

/* For list items, only hide the trailing br, not the paragraph itself */
.ProseMirror[contenteditable="false"] li > p > br.ProseMirror-trailingBreak:only-child {
  display: none;
}

.ProseMirror p.is-editor-empty:first-child::before {
  color: var(--mantine-color-dimmed);
  content: attr(data-placeholder);
  float: left;
  height: 0;
  pointer-events: none;
}

.ProseMirror p {
  margin: 0;
  line-height: 1.46668;
  word-break: break-word;
  overflow-wrap: break-word;
}

.ProseMirror p:first-child {
  margin-top: 0;
}

.ProseMirror p:last-child {
  margin-bottom: 0;
}

.ProseMirror ul,
.ProseMirror ol {
  padding-left: 1.5rem;
  margin: 0;
  word-break: break-word;
  overflow-wrap: break-word;
}

.ProseMirror ul {
  list-style-type: disc;
}

.ProseMirror ol {
  list-style-type: decimal;
}

/* Nested list styles - like Slack */
.ProseMirror ul ul {
  list-style-type: circle;
  margin: 0.2em 0;
}

.ProseMirror ul ul ul {
  list-style-type: square;
}

.ProseMirror ol ol {
  list-style-type: lower-alpha;
  margin: 0.2em 0;
}

.ProseMirror ol ol ol {
  list-style-type: lower-roman;
}

/* Mixed nested lists */
.ProseMirror ul ol {
  list-style-type: lower-alpha;
  margin: 0.2em 0;
}

.ProseMirror ol ul {
  list-style-type: circle;
  margin: 0.2em 0;
}

.ProseMirror li {
  margin: 0;
  display: list-item;
  line-height: 1.46668;
  word-break: break-word;
  overflow-wrap: break-word;
}

.ProseMirror li > p {
  margin: 0;
  word-break: break-word;
  overflow-wrap: break-word;
}

/* Code and Code Block Styles */
.ProseMirror code {
  background-color: rgba(175, 184, 193, 0.2);
  color: #e03e3e;
  border-radius: 3px;
  padding: 2px 6px;
  font-family: 'Courier New', Consolas, Monaco, monospace;
  font-size: 0.85em;
  font-weight: 500;
}

.ProseMirror pre {
  background-color: #1e1e1e;
  border-radius: 6px;
  padding: 16px;
  font-family: 'Courier New', Consolas, Monaco, 'Andale Mono', monospace;
  overflow-x: auto;
  margin: 0.75em 0;
  color: #d4d4d4;
  line-height: 1.6;
  position: relative;
  border: 1px solid rgba(255, 255, 255, 0.1);
}

/* コードブロックのヘッダー（ファイル名表示のみ） */
.ProseMirror pre[data-filename]::before {
  content: attr(data-filename);
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  padding: 8px 12px;
  font-size: 12px;
  font-family: system-ui, -apple-system, sans-serif;
  color: var(--mantine-color-gray-4);
  background-color: rgba(0, 0, 0, 0.3);
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  border-top-left-radius: 6px;
  border-top-right-radius: 6px;
  font-weight: 500;
}

/* ファイル名がある場合のみpadding-topを追加 */
.ProseMirror pre[data-filename] {
  padding-top: 40px;
}

/* ファイル名がない場合はヘッダーを完全に非表示 */
.ProseMirror pre:not([data-filename]) {
  padding-top: 16px;
}

/* コピーボタンのスタイル（NodeViewで追加される） */
.code-block-wrapper {
  position: relative;
  margin: 0.75em 0;
}

/* デフォルトでコピーボタンを非表示 */
.code-block-wrapper .code-block-copy-button {
  opacity: 0;
  transition: opacity 0.2s ease;
}

/* ホバー時、またはコピー済み時にボタンを表示 */
.code-block-wrapper:hover .code-block-copy-button,
.code-block-wrapper .code-block-copy-button[data-copied="true"] {
  opacity: 1;
}

.ProseMirror pre code {
  background: none;
  padding: 0;
  color: inherit;
  font-size: 0.875em;
}

/* Code Block Syntax Highlighting with CSS */
/* Light theme */
.ProseMirror pre {
  background-color: var(--mantine-color-gray-0);
  border: 1px solid var(--mantine-color-gray-3);
  color: var(--mantine-color-gray-9);
}

/* Dark mode */
[data-mantine-color-scheme='dark'] .ProseMirror pre {
  background-color: var(--mantine-color-dark-8);
  border: 1px solid var(--mantine-color-dark-4);
  color: var(--mantine-color-gray-1);
}

.ProseMirror strong {
  font-weight: 700;
}

.ProseMirror em {
  font-style: italic;
}

.ProseMirror s {
  text-decoration: line-through;
}

.ProseMirror blockquote {
  border-left: 3px solid var(--mantine-color-gray-4);
  padding-left: 1rem;
  margin: 1em 0;
  color: var(--mantine-color-dimmed);
}

.ProseMirror h1,
.ProseMirror h2,
.ProseMirror h3 {
  margin: 1em 0 0.5em;
  font-weight: 600;
  line-height: 1.3;
}

.ProseMirror h1 {
  font-size: 1.5em;
}

.ProseMirror h2 {
  font-size: 1.3em;
}

.ProseMirror h3 {
  font-size: 1.1em;
}

/* Link styles */
.ProseMirror a {
  color: var(--mantine-color-blue-6);
  text-decoration: underline;
  cursor: pointer;
  transition: color 0.2s ease;
  position: relative;
}

.ProseMirror a:hover {
  color: var(--mantine-color-blue-7);
}

/* Link preview on hover */
.ProseMirror a::after {
  content: attr(href);
  position: absolute;
  bottom: 100%;
  left: 50%;
  transform: translateX(-50%) translateY(-4px);
  background-color: rgba(0, 0, 0, 0.9);
  color: white;
  padding: 4px 8px;
  border-radius: 4px;
  font-size: 12px;
  white-space: nowrap;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.2s ease;
  z-index: 1000;
  max-width: 300px;
  overflow: hidden;
  text-overflow: ellipsis;
}

.ProseMirror a:hover::after {
  opacity: 1;
}

/* Underline style */
.ProseMirror u {
  text-decoration: underline;
}

/* Horizontal Rule style */
.ProseMirror hr {
  border: none;
  border-top: 2px solid var(--mantine-color-gray-4);
  margin: 1.5em 0;
  cursor: pointer;
}

/* Highlight styles */
.ProseMirror mark {
  background-color: #fff3bf;
  color: inherit;
  padding: 2px 0;
  border-radius: 2px;
}

.ProseMirror mark[data-color] {
  padding: 2px 0;
}

/* Subscript and Superscript styles */
.ProseMirror sub {
  vertical-align: sub;
  font-size: 0.75em;
}

.ProseMirror sup {
  vertical-align: super;
  font-size: 0.75em;
}

/* Dark mode adjustments */
[data-mantine-color-scheme='dark'] .ProseMirror code {
  background-color: rgba(255, 255, 255, 0.1);
  color: #ff7b72;
}

[data-mantine-color-scheme='dark'] .ProseMirror pre {
  background-color: #0d1117;
  border: 1px solid rgba(255, 255, 255, 0.1);
}

[data-mantine-color-scheme='dark'] .ProseMirror blockquote {
  border-left-color: var(--mantine-color-dark-4);
}

[data-mantine-color-scheme='dark'] .ProseMirror a {
  color: var(--mantine-color-blue-4);
}

[data-mantine-color-scheme='dark'] .ProseMirror a:hover {
  color: var(--mantine-color-blue-3);
}

[data-mantine-color-scheme='dark'] .ProseMirror mark {
  background-color: rgba(255, 208, 0, 0.3);
  color: inherit;
}

[data-mantine-color-scheme='dark'] .ProseMirror hr {
  border-top-color: var(--mantine-color-dark-4);
}
